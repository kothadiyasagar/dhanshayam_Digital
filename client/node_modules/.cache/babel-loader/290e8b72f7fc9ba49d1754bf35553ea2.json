{"ast":null,"code":"import React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  const {\n    categories\n  } = props;\n  const rootCategory = categories.find(category => {\n    var _category$_id;\n\n    return (category === null || category === void 0 ? void 0 : (_category$_id = category._id) === null || _category$_id === void 0 ? void 0 : _category$_id.toString()) === '62bfd4c158c0a636474a8b7f';\n  });\n  console.log(rootCategory, \"list1\");\n  console.log(categories, \"list\"); // let array = new Array(rootCategory.subCategories.length)\n\n  function recut(arr, categories) {\n    conns;\n    const apped = categories.find(arr => {\n      var _arr$_id;\n\n      return (arr === null || arr === void 0 ? void 0 : (_arr$_id = arr._id) === null || _arr$_id === void 0 ? void 0 : _arr$_id.toString()) === '62bfd4c158c0a636474a8b7f';\n    }); //   for(let i=0; i<arr.length; i++){\n    //     let  arr1=  arr[i].categories.subCategories\n    //    let id = arr[i].subCategories_id.toString()\n    // let children = arr[i].children\n    //         reacurtion (arr1, children,categories)\n    //        console.log(arr1 , \"recution\")\n    //  }\n\n    function reacurtion(arr1, children, categories) {//      if(arr1._id.toString()==null){\n      //         return\n      //      }\n      //   for(let j=0; j<categories.length; j++){\n      //     for(let k=0; k<arr1.length; k++){\n      //      if(categories[j]._id.toString()===arr1._id.toString()){\n      //          children.push({\n      //             title:categories[j].name,\n      //             key:categories[j].name,\n      //             children:[],\n      //             categories:(categories[j])\n      //          })\n      //           arr1=children.categories.subCategories\n      //           children=children.categories.children\n      //          reacurtion(arr1,children,categories)\n      //      }\n      //      else if(categories[j]._id.toString()===arr1){\n      //         children.push({\n      //             title:categories[j].name,\n      //             key:categories[j].name,\n      //             children:[],\n      //             categories:(categories[j])\n      //          })\n      //           arr1=children.categories.subCategories\n      //           children=children.categories.children\n      //          reacurtion(arr1,children,categories)\n      //      }\n      //     }\n      //    }\n    }\n  }\n\n  function sagar() {\n    console.log(rootCategory.subCategories.length, \"sagar\");\n    let arr = [];\n\n    for (let i = 0; i < rootCategory.subCategories.length; i++) {\n      for (let j = 0; j < categories.length; j++) {\n        if (rootCategory.subCategories[i]._id.toString() === categories[j]._id.toString()) {\n          arr.push({\n            title: categories[j].name,\n            children: [],\n            key: categories[j].name,\n            categories: categories[j]\n          }); //   \n        }\n      }\n    }\n\n    console.log(arr);\n    recut(arr, categories);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: rootCategory ? sagar() : \"\"\n  }, void 0, false);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","List","props","categories","rootCategory","find","category","_id","toString","console","log","recut","arr","conns","apped","reacurtion","arr1","children","sagar","subCategories","length","i","j","push","title","name","key"],"sources":["C:/Users/LENOVO/Desktop/dhanshayam_Digital/client/src/list.jsx"],"sourcesContent":[" import React from \"react\"\r\n\r\nconst List = (props)=>{\r\n     const {categories}=props\r\n     \r\n  const rootCategory = categories.find((category) => category?._id?.toString() === '62bfd4c158c0a636474a8b7f')\r\n  console.log(rootCategory, \"list1\")\r\n   console.log(categories,\"list\")\r\n    // let array = new Array(rootCategory.subCategories.length)\r\n    function  recut (arr, categories){\r\n        conns\r\n        const  apped = categories.find((arr) => arr?._id?.toString() === '62bfd4c158c0a636474a8b7f')\r\n\r\n        //   for(let i=0; i<arr.length; i++){\r\n        //     let  arr1=  arr[i].categories.subCategories\r\n        //    let id = arr[i].subCategories_id.toString()\r\n        // let children = arr[i].children\r\n        //         reacurtion (arr1, children,categories)\r\n        //        console.log(arr1 , \"recution\")\r\n\r\n        //  }\r\n          function  reacurtion (arr1, children,categories){\r\n\r\n        //      if(arr1._id.toString()==null){\r\n        //         return\r\n        //      }\r\n\r\n        //   for(let j=0; j<categories.length; j++){\r\n        //     for(let k=0; k<arr1.length; k++){\r\n\r\n        //      if(categories[j]._id.toString()===arr1._id.toString()){\r\n        //          children.push({\r\n        //             title:categories[j].name,\r\n        //             key:categories[j].name,\r\n        //             children:[],\r\n        //             categories:(categories[j])\r\n\r\n        //          })\r\n        //           arr1=children.categories.subCategories\r\n        //           children=children.categories.children\r\n\r\n        //          reacurtion(arr1,children,categories)\r\n        //      }\r\n        //      else if(categories[j]._id.toString()===arr1){\r\n        //         children.push({\r\n        //             title:categories[j].name,\r\n        //             key:categories[j].name,\r\n        //             children:[],\r\n        //             categories:(categories[j])\r\n\r\n        //          })\r\n        //           arr1=children.categories.subCategories\r\n        //           children=children.categories.children\r\n\r\n        //          reacurtion(arr1,children,categories)\r\n\r\n        //      }\r\n        //     }\r\n        //    }\r\n\r\n            \r\n      }\r\n    }\r\n     function sagar (){\r\n        console.log(rootCategory.subCategories.length,\"sagar\")\r\n        let arr =[]\r\n        for( let i=0;  i<rootCategory.subCategories.length; i++){\r\n            for( let j=0;  j<categories.length; j++){\r\n               if(rootCategory.subCategories[i]._id.toString()===categories[j]._id.toString()){\r\n                    arr.push({\r\n                        title :categories[j].name,\r\n                        children:[],\r\n                        key:categories[j].name,\r\n                        categories: (categories[j])\r\n                           \r\n                        \r\n                    })\r\n                    //   \r\n\r\n               }\r\n        }\r\n\r\n        }\r\n        console.log(arr)\r\n         recut (arr, categories)\r\n     }\r\n  \r\n  return (\r\n    <>\r\n   { rootCategory ?  sagar ():\"\"}\r\n    </>\r\n  )\r\n\r\n    \r\n}\r\nexport default List"],"mappings":"AAAC,OAAOA,KAAP,MAAkB,OAAlB;;;;AAED,MAAMC,IAAI,GAAIC,KAAD,IAAS;EACjB,MAAM;IAACC;EAAD,IAAaD,KAAnB;EAEH,MAAME,YAAY,GAAGD,UAAU,CAACE,IAAX,CAAiBC,QAAD;IAAA;;IAAA,OAAc,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,6BAAAA,QAAQ,CAAEC,GAAV,gEAAeC,QAAf,QAA8B,0BAA5C;EAAA,CAAhB,CAArB;EACAC,OAAO,CAACC,GAAR,CAAYN,YAAZ,EAA0B,OAA1B;EACCK,OAAO,CAACC,GAAR,CAAYP,UAAZ,EAAuB,MAAvB,EALmB,CAMlB;;EACA,SAAUQ,KAAV,CAAiBC,GAAjB,EAAsBT,UAAtB,EAAiC;IAC7BU,KAAK;IACL,MAAOC,KAAK,GAAGX,UAAU,CAACE,IAAX,CAAiBO,GAAD;MAAA;;MAAA,OAAS,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,wBAAAA,GAAG,CAAEL,GAAL,sDAAUC,QAAV,QAAyB,0BAAlC;IAAA,CAAhB,CAAf,CAF6B,CAI7B;IACA;IACA;IACA;IACA;IACA;IAEA;;IACE,SAAUO,UAAV,CAAsBC,IAAtB,EAA4BC,QAA5B,EAAqCd,UAArC,EAAgD,CAElD;MACA;MACA;MAEA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MAEA;MAEA;MACA;MACA;IAGD;EACF;;EACA,SAASe,KAAT,GAAiB;IACdT,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACe,aAAb,CAA2BC,MAAvC,EAA8C,OAA9C;IACA,IAAIR,GAAG,GAAE,EAAT;;IACA,KAAK,IAAIS,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACjB,YAAY,CAACe,aAAb,CAA2BC,MAA5C,EAAoDC,CAAC,EAArD,EAAwD;MACpD,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACnB,UAAU,CAACiB,MAA5B,EAAoCE,CAAC,EAArC,EAAwC;QACrC,IAAGlB,YAAY,CAACe,aAAb,CAA2BE,CAA3B,EAA8Bd,GAA9B,CAAkCC,QAAlC,OAA+CL,UAAU,CAACmB,CAAD,CAAV,CAAcf,GAAd,CAAkBC,QAAlB,EAAlD,EAA+E;UAC1EI,GAAG,CAACW,IAAJ,CAAS;YACLC,KAAK,EAAErB,UAAU,CAACmB,CAAD,CAAV,CAAcG,IADhB;YAELR,QAAQ,EAAC,EAFJ;YAGLS,GAAG,EAACvB,UAAU,CAACmB,CAAD,CAAV,CAAcG,IAHb;YAILtB,UAAU,EAAGA,UAAU,CAACmB,CAAD;UAJlB,CAAT,EAD0E,CAS1E;QAEJ;MACP;IAEA;;IACDb,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACCD,KAAK,CAAEC,GAAF,EAAOT,UAAP,CAAL;EACH;;EAEJ,oBACE;IAAA,UACCC,YAAY,GAAIc,KAAK,EAAT,GAAa;EAD1B,iBADF;AAOD,CA5FD;;KAAMjB,I;AA6FN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}