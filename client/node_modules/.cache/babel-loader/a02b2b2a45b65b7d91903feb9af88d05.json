{"ast":null,"code":"import React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  const {\n    categories\n  } = props;\n  const rootCategory = categories.find(category => {\n    var _category$_id;\n\n    return (category === null || category === void 0 ? void 0 : (_category$_id = category._id) === null || _category$_id === void 0 ? void 0 : _category$_id.toString()) === '62bfd4c158c0a636474a8b7f';\n  });\n  console.log(rootCategory, \"list1\");\n  console.log(categories, \"list\"); // let array = new Array(rootCategory.subCategories.length)\n\n  function sagar() {\n    console.log(rootCategory.subCategories.length, \"sagar\");\n    let arr = [];\n\n    for (let i = 0; i < rootCategory.subCategories.length; i++) {\n      for (let j = 0; j < categories.length; j++) {\n        if (rootCategory.subCategories[i]._id.toString() === categories[j]._id.toString()) {\n          arr.push({\n            title: categories[j].name,\n            children\n          });\n        }\n      }\n    }\n\n    console.log(arr);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: rootCategory ? sagar() : \"\"\n  }, void 0, false);\n};\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","List","props","categories","rootCategory","find","category","_id","toString","console","log","sagar","subCategories","length","arr","i","j","push","title","name","children"],"sources":["C:/Users/LENOVO/Desktop/dhanshayam_Digital/client/src/list.jsx"],"sourcesContent":[" import React from \"react\"\r\n\r\nconst List = (props)=>{\r\n     const {categories}=props\r\n     \r\n  const rootCategory = categories.find((category) => category?._id?.toString() === '62bfd4c158c0a636474a8b7f')\r\n  console.log(rootCategory, \"list1\")\r\n   console.log(categories,\"list\")\r\n    // let array = new Array(rootCategory.subCategories.length)\r\n\r\n     function sagar (){\r\n        console.log(rootCategory.subCategories.length,\"sagar\")\r\n        let arr =[]\r\n        for( let i=0;  i<rootCategory.subCategories.length; i++){\r\n            for( let j=0;  j<categories.length; j++){\r\n               if(rootCategory.subCategories[i]._id.toString()===categories[j]._id.toString()){\r\n                    arr.push({\r\n                        title :categories[j].name,\r\n                        children\r\n                    })\r\n\r\n               }\r\n        }\r\n\r\n        }\r\n        console.log(arr)\r\n     }\r\n  \r\n  return (\r\n    <>\r\n   { rootCategory ?  sagar ():\"\"}\r\n    </>\r\n  )\r\n\r\n    \r\n}\r\nexport default List"],"mappings":"AAAC,OAAOA,KAAP,MAAkB,OAAlB;;;;AAED,MAAMC,IAAI,GAAIC,KAAD,IAAS;EACjB,MAAM;IAACC;EAAD,IAAaD,KAAnB;EAEH,MAAME,YAAY,GAAGD,UAAU,CAACE,IAAX,CAAiBC,QAAD;IAAA;;IAAA,OAAc,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,6BAAAA,QAAQ,CAAEC,GAAV,gEAAeC,QAAf,QAA8B,0BAA5C;EAAA,CAAhB,CAArB;EACAC,OAAO,CAACC,GAAR,CAAYN,YAAZ,EAA0B,OAA1B;EACCK,OAAO,CAACC,GAAR,CAAYP,UAAZ,EAAuB,MAAvB,EALmB,CAMlB;;EAEC,SAASQ,KAAT,GAAiB;IACdF,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACQ,aAAb,CAA2BC,MAAvC,EAA8C,OAA9C;IACA,IAAIC,GAAG,GAAE,EAAT;;IACA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACX,YAAY,CAACQ,aAAb,CAA2BC,MAA5C,EAAoDE,CAAC,EAArD,EAAwD;MACpD,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACb,UAAU,CAACU,MAA5B,EAAoCG,CAAC,EAArC,EAAwC;QACrC,IAAGZ,YAAY,CAACQ,aAAb,CAA2BG,CAA3B,EAA8BR,GAA9B,CAAkCC,QAAlC,OAA+CL,UAAU,CAACa,CAAD,CAAV,CAAcT,GAAd,CAAkBC,QAAlB,EAAlD,EAA+E;UAC1EM,GAAG,CAACG,IAAJ,CAAS;YACLC,KAAK,EAAEf,UAAU,CAACa,CAAD,CAAV,CAAcG,IADhB;YAELC;UAFK,CAAT;QAKJ;MACP;IAEA;;IACDX,OAAO,CAACC,GAAR,CAAYI,GAAZ;EACF;;EAEJ,oBACE;IAAA,UACCV,YAAY,GAAIO,KAAK,EAAT,GAAa;EAD1B,iBADF;AAOD,CAjCD;;KAAMV,I;AAkCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}