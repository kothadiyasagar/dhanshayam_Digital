[{"C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\index.js":"1","C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\reportWebVitals.js":"2","C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\App.js":"3","C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\list.jsx":"4"},{"size":535,"mtime":1656748189315,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1656748189342,"results":"7","hashOfConfig":"6"},{"size":3247,"mtime":1656862866923,"results":"8","hashOfConfig":"6"},{"size":4432,"mtime":1656778296115,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xb31ya",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\index.js",[],[],"C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\App.js",["23","24","25","26","27"],[],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Row, Col, Form, Input, Select, DataNode, TreeProps  } from 'antd'\r\nimport List from './list.jsx';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { Tree } from 'antd';\r\n// import type { DataNode, TreeProps } from 'antd/lib/tree';\r\nimport './App.css';\r\nconst { Option } = Select\r\n\r\nconst App = () => {\r\n  const [categories, setCategories] = useState([])\r\n  const[selectS , setselect] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n\r\n  const getCategories = async () => {\r\n    const data = await fetch('http://localhost:8085/categories')\r\n    const categories = await data.json()\r\n    setCategories(categories)\r\n  }\r\n\r\n  const createNewCategory = async (formValues) => {\r\n    console.log(formValues,\"sagar\")\r\n    await fetch('http://localhost:8085/categories', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formValues)\r\n    })\r\n    await getCategories()\r\n  }\r\n\r\n  const categoryOpts = categories.map((category, index) => <Option key={`cat-option-${index}`} value={category._id}>\r\n    {category.name}\r\n  </Option>)\r\n\r\n  const rootCategory = categories.find((category) => category?._id?.toString() === '62bfd4c158c0a636474a8b7f')\r\n   console.log(rootCategory)\r\n\r\n  const renderItem = (item) => <li  onClick={()=>setselect(item._id)}>{item.name}</li>\r\n\r\n  const renderListItems = (category) => {\r\n    return category?.subCategories?.map((subCategory) => {\r\n      const matchedCategory = typeof subCategory === 'object' ? subCategory : categories.find((cat) => cat._id?.toString() === subCategory?.toString())\r\n       console.log({ matchedCategory })\r\n      return !matchedCategory.subCategories.length ? renderItem(matchedCategory) :\r\n        <li onClick={()=>setselect(matchedCategory._id)}>\r\n          {matchedCategory.name}\r\n          <ul>\r\n            {renderListItems(matchedCategory)}\r\n          </ul>\r\n        </li>\r\n    })\r\n  }\r\n\r\n  const renderedCategories = <ul>{renderListItems(rootCategory)}</ul>\r\nconsole.log(categories)\r\n  return (\r\n    <div className=\"App\">\r\n      <Row>\r\n        <Col span={12}  style={{ display: '', height: '100vh', marginTop: '100px',textAlign:\"start\",marginLeft:\"100px\" }}>\r\n          <h1>Category list</h1>\r\n          <ul>\r\n            {\r\n              renderedCategories\r\n            }\r\n          </ul>\r\n        </Col>\r\n        \r\n        <Col span={10} style={{ display: '', height: '100vh', marginTop: '100px',textAlign:\"start\" }}>\r\n        <h1>Add new user</h1>\r\n          <Form style={{ width: '90%' }} onFinish={createNewCategory}>\r\n            <Form.Item label='Name' name='name' rules={[{ required: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label='Category' name='parent' rules={[{ required: true }]}>\r\n              <Select  >\r\n                {categoryOpts}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">Add New</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      {/* <List  categories={categories} /> */}\r\n      <Tree />\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\LENOVO\\Desktop\\dhanshayam_Digital\\client\\src\\list.jsx",["28"],[],{"ruleId":"29","severity":1,"message":"30","line":2,"column":49,"nodeType":"31","messageId":"32","endLine":2,"endColumn":57},{"ruleId":"29","severity":1,"message":"33","line":2,"column":59,"nodeType":"31","messageId":"32","endLine":2,"endColumn":68},{"ruleId":"29","severity":1,"message":"34","line":3,"column":8,"nodeType":"31","messageId":"32","endLine":3,"endColumn":12},{"ruleId":"29","severity":1,"message":"35","line":4,"column":10,"nodeType":"31","messageId":"32","endLine":4,"endColumn":22},{"ruleId":"29","severity":1,"message":"36","line":12,"column":9,"nodeType":"31","messageId":"32","endLine":12,"endColumn":16},{"ruleId":"29","severity":1,"message":"37","line":57,"column":21,"nodeType":"31","messageId":"32","endLine":57,"endColumn":31},"no-unused-vars","'DataNode' is defined but never used.","Identifier","unusedVar","'TreeProps' is defined but never used.","'List' is defined but never used.","'DownOutlined' is defined but never used.","'selectS' is assigned a value but never used.","'reacurtion' is defined but never used."]